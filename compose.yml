services:
    api:
        image: ${IMAGES_PREFIX:-}api:${DOCKER_TAG:-latest}
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${API_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            DB_CONNECTION:             mysql
            DB_DATABASE:               ${DB_DATABASE}
            DB_HOST:                   ${DB_HOST}
            DB_PASSWORD:               ${DB_PASSWORD}
            DB_PORT:                   ${DB_PORT}
            DB_USERNAME:               ${DB_USERNAME}
            IGNITION_LOCAL_SITES_PATH: ${PWD}
            TMDB_API_KEY:              ${TMDB_API_KEY}
            TMDB_API_URL:              ${TMDB_API_URL}
            TMDB_MEDIA_API_URL:        ${TMDB_MEDIA_API_URL}
            WWWUSER:                   ${WWWUSER}
        networks:
            - plus-que-pro
        depends_on:
            - database
    
    app:
        image: ${IMAGES_PREFIX:-}app:${DOCKER_TAG:-latest}
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            API_URL:         ${API_URL}
            PORT:            ${APP_PORT}
            NEXTAUTH_URL:    ${NEXTAUTH_URL}
            NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        networks:
            - plus-que-pro
        depends_on:
            - api

    database:
        image: 'mysql/mysql-server:8.0'
        environment:
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
        volumes:
            - 'database-data:/var/lib/mysql'
            - './api/vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - plus-que-pro
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

networks:
    plus-que-pro:
        driver: bridge

volumes:
    database-data:
        driver: local
